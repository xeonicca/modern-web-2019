{"data":{"talk":{"id":"6399","title":"The immutable database - Datomic","classroom":"105","track":"E","date":"2019-8-29","startDate":1567063800000,"startDateText":"15:30:00","endDate":1567065300000,"endDateText":"15:55:00","sessionType":"session","summary":"<p>Clojure 語言，就如同許多現代 functional programming language 一樣，強調 immutable data structure 。可以減少程式開發者的負擔，再也不用去想 `_.cloneDeep()` 。那，大家可曾想過，這種 immutable 的概念，如果拿來套用在資料庫，我們可以得到什麼好用的特性 (feature) 呢？</p>\n<p>Datomic 就是這樣子的一個資料庫：<br />\n(1) 它儲存資料的方式就像 git 。沒有所謂的 update/delete 語意。使用者隨時可以下 as-of 指令，回到這個資料庫之前任意時間點的狀態。非常適合寫 temporal queries <br />\n(2) 大部分的 NoSQL 是用來處理 relational database 不善長處理的問題，是要補足 RDB 的不足。然而，Datomic 的目標，就是要取代 relational database 。它提供了 datalog 語法， expressive power 不亞於 SQL 。<br />\n(3) Datomic 的 architecture 設計，充分了考慮了現代 SQL 的效能瓶頸 --- the contention of lock 。Datomic 的 read 完全不會被 write 卡到。它有 full horizontal scalable read</p>\n<p>我在 Line 的專案，就是使用 Clojure/Datomic 來開發。確實在關鍵的時刻，得到了很好的成果。</p>\n","language":"中文","sort":1567063800000,"path":"/talk/6399","speaker":{"name":"陳家宏 (Laurence)","avatar":"/sites/default/files/%E9%99%B3%E5%AE%B6%E5%AE%8F_opt.jpg","company":"台灣連線 (Line) "}}},"context":{}}